$date
	Fri Sep 15 21:51:04 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! carry $end
$var wire 1 " overflow $end
$var wire 4 # result [3:0] $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 1 & control $end
$scope module r1 $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 4 ) b_ [3:0] $end
$var wire 3 * c [2:0] $end
$var wire 1 ! carry $end
$var wire 1 + control $end
$var wire 1 " overflow $end
$var wire 4 , result [3:0] $end
$scope module OC1 $end
$var wire 4 - b [3:0] $end
$var wire 4 . b_ [3:0] $end
$var wire 1 + control $end
$upscope $end
$scope module FA0 $end
$var wire 1 / a $end
$var wire 1 0 b_ $end
$var wire 1 + ci $end
$var wire 1 1 co $end
$var wire 1 2 pc0 $end
$var wire 1 3 pc1 $end
$var wire 1 4 ps $end
$var wire 1 5 s $end
$scope module HA0 $end
$var wire 1 2 hc $end
$var wire 1 4 hs $end
$var wire 1 / ip1 $end
$var wire 1 0 ip2 $end
$upscope $end
$scope module HA1 $end
$var wire 1 3 hc $end
$var wire 1 5 hs $end
$var wire 1 4 ip1 $end
$var wire 1 + ip2 $end
$upscope $end
$upscope $end
$scope module FA1 $end
$var wire 1 6 a $end
$var wire 1 7 b_ $end
$var wire 1 8 ci $end
$var wire 1 9 co $end
$var wire 1 : pc0 $end
$var wire 1 ; pc1 $end
$var wire 1 < ps $end
$var wire 1 = s $end
$scope module HA0 $end
$var wire 1 : hc $end
$var wire 1 < hs $end
$var wire 1 6 ip1 $end
$var wire 1 7 ip2 $end
$upscope $end
$scope module HA1 $end
$var wire 1 ; hc $end
$var wire 1 = hs $end
$var wire 1 < ip1 $end
$var wire 1 8 ip2 $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 > a $end
$var wire 1 ? b_ $end
$var wire 1 @ ci $end
$var wire 1 A co $end
$var wire 1 B pc0 $end
$var wire 1 C pc1 $end
$var wire 1 D ps $end
$var wire 1 E s $end
$scope module HA0 $end
$var wire 1 B hc $end
$var wire 1 D hs $end
$var wire 1 > ip1 $end
$var wire 1 ? ip2 $end
$upscope $end
$scope module HA1 $end
$var wire 1 C hc $end
$var wire 1 E hs $end
$var wire 1 D ip1 $end
$var wire 1 @ ip2 $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 F a $end
$var wire 1 G b_ $end
$var wire 1 H ci $end
$var wire 1 ! co $end
$var wire 1 I pc0 $end
$var wire 1 J pc1 $end
$var wire 1 K ps $end
$var wire 1 L s $end
$scope module HA0 $end
$var wire 1 I hc $end
$var wire 1 K hs $end
$var wire 1 F ip1 $end
$var wire 1 G ip2 $end
$upscope $end
$scope module HA1 $end
$var wire 1 J hc $end
$var wire 1 L hs $end
$var wire 1 K ip1 $end
$var wire 1 H ip2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0L
1K
1J
0I
1H
1G
0F
0E
1D
1C
0B
1A
1@
1?
0>
0=
1<
1;
0:
19
18
17
06
05
14
13
02
11
10
0/
b1111 .
b0 -
b0 ,
1+
b111 *
b1111 )
b0 (
b0 '
1&
b0 %
b0 $
b0 #
0"
1!
$end
#5
1!
0L
1J
0"
1H
1A
0E
1C
1@
19
b111 *
07
15
03
0=
b1 #
b1 ,
1;
b1101 )
b1101 .
04
12
1<
0:
1/
16
b10 %
b10 (
b10 -
b11 $
b11 '
#10
1"
0!
1L
0J
0@
0K
09
b101 *
0G
1=
0;
0E
b1011 #
b1011 ,
0C
b101 )
b101 .
0<
0D
1B
06
1>
b1010 %
b1010 (
b1010 -
b101 $
b101 '
#15
1C
1H
1@
0"
0E
1A
19
b111 *
1!
1:
1D
0B
1=
0;
0L
1J
17
0?
0<
1K
b11 )
b11 .
05
b10 #
b10 ,
16
1F
0&
0+
b11 %
b11 (
b11 -
b1111 $
b1111 '
